Please read the whole file.Blind264 is intended only to make DXVA compliant encodes. This means 4:2:0 only, 8-bit depth only, L4.1 only. Part of the reason for doing this is to maximize compatibility with mobile devices, which struggle much more non-DXVA encodes. Furthermore, breaking compatibility doesn't usually save more than 5% bitrate total at a given quality.Blind264 comes with a configuration file. The first set of settings relates to the filepath of various tools. If the default config values are not used, blind264 will assume that a full filepath has been included. All values included in the config file can be adjusted on the fly using the cli. All values that can be adjusted in the cli have the defaults set in config.txt. Be aware that changing settings can affect how b264 operated. It should all be explained in the readme though, so don't be too paranoid.If you do not want to use the default location of config.txt ("C:/b264/config.txt"), then the first command line argument must be --conf New:\Filepath\to.exeThe algorithm that guesses qcomp starts at the default value (example .7), does an encode, then tests .05 higher (example .75), and depending on which performed better and by how much, it will test either higher values or lower values. Thus far b264 has minimal error checking and therefore might crash if you use bad input. This will hopefully be fixed with future versions. Please report/post any annoying crashes or bugs or ways to improve b264.1. The source file should be an avs that has one line: ffvideosource("C:\asdf\source.mkv").Crop(x,x,x,x).DeInterlaceOrDeTelecineIfNeeded()   Blind264 will manage the rest of the script writing, including SelectRangeEvery and Spline36Resize.         ======Optional, but useful======when using the cli:--config = --conf = --c--x264loc = --x264 = --x--avs2yucloc = --avs2yuv == --al--logdir = --dir = --ld--x264def = --xd--x264cur = --xc--avs = --a--psize = --p--mode = --mDevelopers notes: there's another algorithm for guessing qcomp that seems to be able to figure out the correct value in just 2 tests (.7 and .75, and then figures out the correct value based on the difference in the db), but this has only been tested on a few sources and so isn't implimented because it might not actually be consistent.